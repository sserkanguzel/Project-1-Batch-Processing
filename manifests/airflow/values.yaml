airflowVersion: "2.9.1"
## hpa: Horizontal Pod AutoScaler
## Service Account: In Kubernetes, a ServiceAccount provides an identity for pods to interact with the Kubernetes API
## Security Context: Filesystem access, UID ID access etc configurations
executor: KubernetesExecutor

airflow:
  users:
    - username: admin
      password: admin
      role: Admin
      email: admin@example.com

webserver:
  enabled: true
  port: 8080
  service:
    type: NodePort
    nodePort: 30080  # Optional: choose a specific port or remove to auto-assign
  podDisruptionBudget:
    enabled: false  
  securityContexts:
    pod: {}
    container: {}
  serviceAccount:
    create: true
  hpa:
    enabled: false

  
scheduler:
  enabled: true

triggerer:
  enabled: true

workers:
  keda:
    enabled: true
    minReplicaCount: 1
    maxReplicaCount: 10
    pollingInterval: 30
    cooldownPeriod: 300
  persistence:
    enabled: false
  
  serviceAccount:
    create: true
  hpa:
    enabled: false
    
dags:
  gitSync:
    enabled: true
    repo: https://github.com/sserkanguzel/your-dag-repo.git
    branch: main
    subPath: dags   # adjust if your DAGs are in a subfolder
    depth: 1
    syncInterval: 60
    credentials:
      username: ""   # Leave blank if public repo
      password: ""   # Or use `existingSecret` if private

logs:
  persistence:
    enabled: false

postgresql:
  enabled: true
  auth:
    username: airflow
    password: airflow
    database: airflow
  persistence:
    enabled: true
    storageClass: "local-path"
    size: 8Gi

redis:
  enabled: true

ingress:
  enabled: false  # We're using NodePort instead
  web:
    enabled: false
namespace: airflow

images:
  airflow:
    repository: apache/airflow
    tag: 2.9.1

createUserJob:
  useHelmHooks: false
  applyCustomEnv: false
migrateDatabaseJob:
  useHelmHooks: false
  applyCustomEnv: false

networkPolicies:
  enabled: false
