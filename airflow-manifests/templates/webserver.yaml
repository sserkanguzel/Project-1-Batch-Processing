apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      serviceAccountName: {{ .Values.airflow.serviceAccountName }}
      containers:
      - name: webserver
        image: "{{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}"
        command: ["/bin/bash", "-c"]
        args:
          - |
            until pg_isready -h postgres-postgresql.airflow.svc.cluster.local -p 5432; do
                echo "Waiting for Postgres to be ready...";
                sleep 5;
            done;
            airflow db migrate
            airflow users create \
              --username admin \
              --password admin \
              --firstname Airflow \
              --lastname Admin \
              --role Admin \
              --email admin@example.com || true
            exec airflow webserver
        ports:
        - containerPort: 8080
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: {{ .Values.airflow.executor }}
        - name: AIRFLOW__KUBERNETES_EXECUTOR__NAMESPACE
          value: {{ .Values.namespace }}
        - name: AIRFLOW__CORE__FERNET_KEY
          value: {{ .Values.airflow.fernetKey }}
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          value: {{ .Values.airflow.secretKey }}
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://{{ .Values.database.postgres.user }}:{{ .Values.database.postgres.password }}@postgres-postgresql.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.database.postgres.port }}/{{ .Values.database.postgres.db }}
        - name: AIRFLOW__CORE__DAGS_FOLDER
          value: /opt/airflow/dags/repo/dags
        volumeMounts:
        - name: dags
          mountPath: /opt/airflow/dags

      - name: git-sync
        image: k8s.gcr.io/git-sync/git-sync:v3.6.6
        args:
          - "--repo={{ .Values.dags.gitSync.repo }}"
          - "--branch={{ .Values.dags.gitSync.branch }}"
          - "--rev={{ .Values.dags.gitSync.rev }}"
          - "--root={{ .Values.dags.gitSync.root }}"
          - "--dest={{ .Values.dags.gitSync.dest }}"
          - "--wait={{ .Values.dags.gitSync.wait }}"
        volumeMounts:
          - name: dags
            mountPath: {{ .Values.dags.gitSync.mountPath }}

      volumes:
        - name: dags
          emptyDir: {}
