apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-scheduler
  template:
    metadata:
      labels:
        app: airflow-scheduler
    spec:
      serviceAccountName: {{ .Values.airflow.serviceAccountName }}
      containers:
      - name: git-sync
        image: "{{ .Values.airflow.gitsync.image.repository }}:{{ .Values.airflow.gitsync.image.tag }}"
        env:
        - name: GIT_SYNC_REPO
          value: "{{ .Values.airflow.gitsync.repo }}"
        - name: GIT_SYNC_BRANCH
          value: "{{ .Values.airflow.gitsync.branch }}"
        - name: GIT_SYNC_ROOT
          value: "/git"
        - name: GIT_SYNC_DEST
          value: "repo"
        - name: GIT_SYNC_SUBPATH
          value: "dags"
        - name: GIT_SYNC_ONE_TIME
          value: "false"   # Continuous sync enabled
        volumeMounts:
        - name: dags-volume
          mountPath: /git

      - name: scheduler
        image: "{{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}"
        command: ["/bin/bash", "-c"]
        args:
          - |
            until pg_isready -h postgres-postgresql.airflow.svc.cluster.local -p 5432; do
                echo "Waiting for Postgres to be ready...";
                sleep 5;
            done;
            exec airflow scheduler
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: {{ .Values.airflow.executor }}
        - name: AIRFLOW__KUBERNETES_EXECUTOR__NAMESPACE
          value: {{ .Values.namespace }}
        # --- ADD THIS NEW ENVIRONMENT VARIABLE ---
        - name: AIRFLOW__KUBERNETES_EXECUTOR__POD_TEMPLATE_FILE
          value: "/opt/airflow/pod_templates/pod_template.yaml" # This path inside the container
        # --- END NEW ENVIRONMENT VARIABLE ---
        - name: AIRFLOW__CORE__FERNET_KEY
          value: {{ .Values.airflow.fernetKey }}
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          value: {{ .Values.airflow.secretKey }}
        - name: AIRFLOW__CORE__DAGS_FOLDER
          value: /opt/airflow/dags/repo/dags
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://{{ .Values.database.postgres.user }}:{{ .Values.database.postgres.password }}@postgres-postgresql.{{ .Values.namespace }}.svc.cluster.local:{{ .Values.database.postgres.port }}/{{ .Values.database.postgres.db }}
        volumeMounts:
        - name: dags-volume
          mountPath: /opt/airflow/dags
        # --- ADD THIS NEW VOLUME MOUNT ---
        - name: pod-template-volume # This name must match the volume definition below
          mountPath: /opt/airflow/pod_templates # The directory where the template file will appear
        # --- END NEW VOLUME MOUNT ---

      volumes:
      - name: dags-volume
        emptyDir: {}
      # --- ADD THIS NEW VOLUME DEFINITION ---
      - name: pod-template-volume
        configMap:
          name: airflow-pod-template # This name must match the ConfigMap created above
          items:
            - key: pod_template.yaml # The key in the ConfigMap's 'data' section
              path: pod_template.yaml # The filename it will appear as in the mountPath
      # --- END NEW VOLUME DEFINITION ---